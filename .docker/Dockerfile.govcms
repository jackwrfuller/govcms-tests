# Set the PHP and GovCMS versions as arguments
ARG PHP_VERSION=8.3
ARG GOVCMS_VERSION=10.x-latest
ARG DRUPAL_VERSION=10.2

# Stage 1: Web image
FROM govcms/govcms:${GOVCMS_VERSION} AS govcms
FROM govcmstesting/ci:latest-php${PHP_VERSION}-apache

USER root

# Install ssmtp and clean up
RUN apt-get update && \
    apt-get install -y --no-install-recommends ssmtp nano && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN echo "hostname=govcms.localhost" > /etc/ssmtp/ssmtp.conf && \
    echo "root=no-reply@govcms.localhost" >> /etc/ssmtp/ssmtp.conf && \
    echo "mailhub=mailhog:1025" >> /etc/ssmtp/ssmtp.conf && \
    echo "sendmail_path=/usr/sbin/ssmtp -t" >> /usr/local/etc/php/conf.d/docker-php-sendmail.ini

# Set environment variables
ENV SIMPLETEST_BASE_URL="http://localhost"
ENV SIMPLETEST_DB='sqlite://sites/default/files/.ht.sqlite'
# ENV SIMPLETEST_DB='mysql://drupal:drupal@mariadb/drupal'
ENV SIMPLESAMLPHP_CONFIG_DIR=/app/custom/sso/config

# Set the working directory to "/app/"
WORKDIR /app

# Copy govcms and test files with correct ownership
COPY --chown=govcms:govcms --from=govcms /app /app

# Add the install.php file from the Drupal repository
ADD --chown=govcms:govcms https://github.com/drupal/drupal/raw/10.2.x/core/install.php /app/web/core/install.php

# Copy SSO configuration files
COPY .docker/sso/config /app/custom/sso/config

# Configure Apache for Drupal and append SSO configuration
RUN set -eux; \
    echo '<VirtualHost *:80>' > /etc/apache2/sites-available/000-default.conf; \
    echo '    ServerAdmin webmaster@localhost' >> /etc/apache2/sites-available/000-default.conf; \
    echo '    DocumentRoot /app/web' >> /etc/apache2/sites-available/000-default.conf; \
    echo '    <Directory /app/web>' >> /etc/apache2/sites-available/000-default.conf; \
    echo '        Options Indexes FollowSymLinks' >> /etc/apache2/sites-available/000-default.conf; \
    echo '        AllowOverride All' >> /etc/apache2/sites-available/000-default.conf; \
    echo '        Require all granted' >> /etc/apache2/sites-available/000-default.conf; \
    echo '    </Directory>' >> /etc/apache2/sites-available/000-default.conf; \
    echo '    ErrorLog /dev/stderr' >> /etc/apache2/sites-available/000-default.conf; \
    echo '    CustomLog /dev/stdout combined' >> /etc/apache2/sites-available/000-default.conf; \
    echo '    Alias /simplesaml /app/vendor/simplesamlphp/simplesamlphp/public' >> /etc/apache2/sites-available/000-default.conf; \
    echo '    <Directory /app/vendor/simplesamlphp/simplesamlphp/public>' >> /etc/apache2/sites-available/000-default.conf; \
    echo '        Require all granted' >> /etc/apache2/sites-available/000-default.conf; \
    echo '        Options FollowSymLinks' >> /etc/apache2/sites-available/000-default.conf; \
    echo '        AllowOverride None' >> /etc/apache2/sites-available/000-default.conf; \
    echo '    </Directory>' >> /etc/apache2/sites-available/000-default.conf; \
    echo '</VirtualHost>' >> /etc/apache2/sites-available/000-default.conf

# Switch to the govcms user
USER govcms

# Install PHP dependencies using Composer
RUN --mount=type=cache,mode=0777,target=/root/.cache composer update --with-all-dependencies --optimize-autoloader

# Stage 2: Build tests
# Set the working directory
WORKDIR /tests

# Copy only necessary files and directories explicitly
COPY behat/ behat/
COPY cy/ cy/
COPY phpunit/ phpunit/
COPY phpcs.govcms.xml phpcs.govcms.xml
COPY phpcs.xml phpcs.xml

# Copy only the necessary files for dependency installation
COPY composer.json .

# Install PHP dependencies using Composer
RUN --mount=type=cache,mode=0777,target=/root/.cache composer update --no-dev --optimize-autoloader

# Stage 3: Final image
# Set the working directory
WORKDIR /app

# Switch to the govcms user
USER govcms

# Copy the startup script to the image
COPY --chown=govcms:govcms .docker/scripts/startup.sh /app/startup.sh
COPY --chown=govcms:govcms .docker/scripts/entrypoint.sh /app/entrypoint.sh
RUN chmod +x /app/startup.sh /app/entrypoint.sh

# Set the entrypoint to the custom entrypoint script
ENTRYPOINT ["/app/entrypoint.sh"]

# Default command (can be overridden by docker-compose)
CMD ["apache2-foreground"]